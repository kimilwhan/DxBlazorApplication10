@page "/counter"
@attribute [Authorize]
@rendermode InteractiveServer

@inherits BasePageComponent
@inject MessageBoxService MsgBoxService

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<div class="counter-block">
    <div class="counter-content">
        <div class="counter-count">
            @currentCount
        </div>
        <div class="counter-text">
            current count
        </div>
        <div class="counter-block-back"></div>
    </div>
    <DxButton Click="IncrementCount">Click me</DxButton>
</div>

@code {
    private int currentCount = 0;

    private void IncrementCount()
    {
        currentCount++;
    }

    protected override async void OnSearch()
    {
        Console.WriteLine($"(으)로 고객을 조회합니다.");
        // hasChanges = true;
        // ToolbarState.SetSaveButtonState(hasChanges);

        // 1. 확인(Confirm) 메시지 박스를 띄우고 사용자의 응답을 기다립니다.
        bool confirmed = await MsgBoxService.Confirm("삭제 확인", "정말로 이 항목을 삭제하시겠습니까?");

        // 2. 사용자가 '확인'을 눌렀을 때만 삭제 로직을 실행합니다.
        if (confirmed)
        {
            Console.WriteLine("삭제 로직 실행...");
            // 여기에 실제 삭제 로직 구현...

            // 3. 삭제 완료 후 알림(Alert) 창을 띄웁니다.
            await MsgBoxService.ShowAlert("완료", "삭제가 완료되었습니다.");
        }
        else
        {
            Console.WriteLine("삭제가 취소되었습니다.");
        }
    }

    protected override void OnSave()
    {
        // if (!hasChanges) return;
        Console.WriteLine("변경 사항을 저장합니다.");
        // hasChanges = false;
        // ToolbarState.SetSaveButtonState(hasChanges);
    }
}
